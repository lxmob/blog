比特币中账户交易是要说明币的来源
假设A过去的一笔输出交易中有10个BTC，A向B发起转账交易3BTC
交易中说明A币的来源是10个BTC，这样其中剩下的7个BTC将会作为矿工手续费
比特币大部分钱包设计，会将A币来源剩下的7个BTC重新转入自己的账户地址
因为在比特币系统中是没有账户余额的概念，只有币来源的哈希值地址

以太坊是基于账户模式(account-based ledger)
类似于日常中银行账户形式，系统中要显示每个账户中存在多少个以太币
以太坊中转账交易不需要说明币的来源，也不需要将交易中币剩下的来源转入自己的账户
以太坊这样设计可以有天然防范双花攻击的效应，相当于流水账，你只要花钱就从你账户上扣除

重放攻击(replay attack)
A在与B交易时，当该交易已经确认放入区块链中，假设B节点是有恶意的
将A交易又重新放在网络上进行交易，这种形式属于重放攻击

以太坊如何解决这个问题？
加一个计数器(nonce)将交易次数记录一下，这个账户历史上一共发布了多少次交易
然后转账时候交易次数要成为转账内容的一部分，将整个内容进行数字签名(signed)
因为有数字签名所以nonce的值其他人是无法更改的，系统中每个节点都要维护A账户状态
不仅要维护A账户中的金额，还需要维护A交易次数

外部账户(externally owned account)
类似于比特币的账户形式由公私钥控制的，谁掌握了私钥就掌握了账户的控制权
也可以称为普通账户，包含记录账户余额(balance)和交易次数(nonce)

合约账户(smart contract account)
这种账户性质不是通过公私钥来控制的，合约账户中也包含balance和nonce
一个合约可以调用另外一个合约，所以它要通过nonce值去记录一下调用的次数
但是以太坊规定合约账户不能主动发起一个交易，所有交易只能由外部账户发起
外部账户发起交易如果调用了合约账户，合约账户可以发送一个消息(message)调用另外一个合约
除此之外合约账户还有代码(code)以及状态(storage)

合约账户怎么被调用？
当创建一个合约账户时会返回一个地址，通过地址来调用合约，调用合约状态会发生变化

为什么要设计合约账户？
比特币中账户具备隐匿性，每次交易后可以换一个新账户，提高账户的隐私性
以太坊中设计的是智能合约要求参与者具备稳定的身份，假设以太坊按照比特币账户模型
每次交易后参与者都去换一个账户，那么这将给合同的执行带来一些困难

金融衍生品(financial derivative)
例如一些期权期货，向合约里投入一笔钱，预测未来的价格走势，预测正确还你本金加收益
如果你的账户在投完钱之后就变了，到时候怎么把钱还给你
所以以太坊在设计账户时，考虑了之前已有模型的利弊得失
最后决定没有采用比特币基于交易的账户，而是采用基于账户的模式
