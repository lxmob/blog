crypto-currency
比特币被大家称为加密货币，但是加密货币本身是不加密的
在区块链中交易记录、交易者账户地址以及交易金额公开透明，任何人都可以查看

比特币用到了密码学中的两个功能
1.哈希(hash函数)
2.签名

密码学中运用的hash函数是cryptographic hash function
它具备两个重要的性质
1.collision resistance(哈希碰撞)
2.hiding

什么是哈希碰撞？
如果有两个输入值x、y且(x != y)，通过hash函数输出结果H(x) == H(y)，这就是哈希碰撞
一般来讲哈希碰撞是不可避免的，因为输入空间远远大于输出空间
比如有一个256位的哈希值，输出范围就是2^256，而输入空间是不受限制的
想要人为的去创造哈希碰撞是没有一个高效方法的
假设给定一个x，通过x去找到y并且这两个哈希值还要相等，怎么解？
硬要实现的话可以通过蛮力求解(brute-force)的方式，一个个遍历x和y看哪个哈希值相等
如果输入的数是256位的，这种求解方法在实际中是不可行的，工作量会非常大

collision resistance性质
它可以用来对一个信息(message)求消息摘要(digest)
通过H(m)=digest，用来检测这个message的篡改
如果有人对message进行更改，那么它的哈希值就会产生变化
它的性质就是找不到m'然后通过求出H(m')哈希值，使m'的哈希值与m相等
如果找到了那就是人为的创造了哈希碰撞，所以没有办法能够篡改内容同时还能不被检测出来

collision resistance用处
例如想要在云服务器中上传一个视频文件，先在本地将文件的哈希值进行计算保存，然后上传
经过一段时间后，再从云服务器中下载该文件，重新计算哈希值就可以判断出该文件是否有被篡改

目前没有一个密码学专家能够在数学上证明hash函数collision resistance能够人为创造出来的
也有一些hash函数在以前是被认为collision resistance，但是在后来大家找到了制造哈希碰撞的方法
著名的例子就是MD5，现在已经不安全了

什么是hiding？
hash函数计算过程是单向的不可逆的
给定一个x输出H(x)得到哈希值，是无法通过H(x)哈希值反推出x的结果
换句话讲这个哈希值是没有透漏出x的任何信息

hiding性质
要求输入值足够大，使得蛮力求解的方式是不可行的
而且取值范围要分布均匀各种取值的可能性都是相差不大的等概率
如果输入值足够大，但是每次出现的都是中间的少数几个值也是比较容易被破解的

hiding用处
它可以和collision resistance一起使用来实现数字承诺(digital commitment)
又可以称为密信的数字等价物(digital equivalent of a sealed envelope)

现实生活中的密信(sealed envelope)用处
如果有一个说他可以预测股票走势，公开说一支股票明天会涨停
如果这个人具备影响力那么这支股票真的会受到他的影响要么涨停要么跌停，这就是公开预测结果的问题
那如果不公开，等到第二天再公开预测结果，大家应该怎么去判断他是否对预测结果进行过篡改呢
那么sealed envelope用处就出来了，他可以将预测的结果通过密封信件的形式交由第三方公证机构保管
等到第二天收盘时第三方公证机构去开启这个信封来判断预测到底是否准确

电子中的digital sealed envelope用处
把这个预测结果作为x算出它的哈希值，然后将哈希值公布出去
因为具备hiding的性质所以不知道x的结果是什么，到第二天收盘时再把这个预测结果公布出去
因为H(x)具有collision resistance性质所以这个预测结果是不可能被篡改的

实际操作实现的细节
按照股票的例子股票一共就几千支输入的空间不是足够大
那么常用的方法是将这个输入值拼接一个随机数然后再一起取哈希值H(x+nonce)
这样能够保证输入值是足够大的分布也是均匀的

比特币中运用的hash函数还有第三个性质puzzle friendly
哈希值的计算事先是不可预测的，通过一个输入值很难猜出它最后的哈希值是什么
只能通过对输入值一个个进行计算看它的结果最后是否落在要求的范围

挖矿的过程
就是在查找一个nonce随机数，这个nonce和区块头里的其它信息合在一起作为输入
取出一个哈希值来，这个哈希值要小于或等于某个指定的目标阈值(临界值)
H(nonce+block header) <= target
比特币使用区块链技术，区块链就是将每一个区块通过链表连接起来
block header中存在很多阈，其中有一个阈是可以设置的随机数nonce
挖矿的过程就是在不停的试各种随机数，使得整个block header取哈希值后落在指定的范围内
这个计算过程是没有捷径的，只能一个个的去试nonce，才能找到符合要求的解
所以这个过程才可以用来作为工作量证明(proof of work)
你挖到矿了，找到符合要求的nonce了，一定是你付出了大量的工作，没有其它的捷径

挖矿很难验证很容易difficult to solve, but easy to verify
一旦有人找到这个nonce然后通过广播发布出去，其他人要验证这个nonce是否符合要求是很容易的
这个nonce作为block haeder的一部分，只要算一次哈希值是否小于等于这个目标阈值就可以了

比特币运用的hash函数叫做SHA-256，secure hash algorithm
上面介绍的hash函数的三种性质它都是满足的

比特币中的账户管理，它是去中心化的没有机构监管，如何做到账户管理？
每个人自己创建账户不需要任何人批准，开户的过程就是创建公私密钥对(public key, private key)
公私密钥来源于非对称加密(asymmetric encryption algorithm)体系中

最早的加密体系是对称的，什么是对称加密？
https://en.wikipedia.org/wiki/Symmetric-key_algorithm
对称加密的弱点在于密钥的分发不是很安全，所以就产生了非对称加密，所采用的是一对密钥

非对称加密
通过公钥进行加密，私钥进行解密
假设我要发送一条信息给你，我使用你的公钥对信息进行加密发送给你
你收到后通过你的私钥对信息进行解密，加密信息是用同一个人的公钥和私钥
公钥用于公开接收信息，私钥用于解密信息，这样就解决了对称加密中密钥分发可能产生不安全的问题

比特币系统中公钥就相当于你的账户，私钥就是你的账户密码
上面说过比特币被称为加密货币，但是对信息是不加密的，那么使用公私钥是干嘛的？
就是用来做签名的
假设我要向你转账10个比特币，然后这条交易记录会由我公布出去
那么其他人是如何知道这条交易是由我发起的呢，其他人是否会冒充我的账户进行交易呢
所以我要用私钥对这个交易信息进行签名，其他人收到后使用我的公钥对这条交易信息进行验证

如果在本地批量生成公私钥对呢？
通过在本地不停的创建账户，使账户与比特币系统中已有的账户公私钥对相同这种攻击手段是否可行？
理论上来讲是可以的，但在创建账户的实际过程中发生这种可能性比地球爆炸的几率还要小

比特币系统中运用密码学的这两种方式，先对一个message进行取哈希值，然后对哈希值进行签名
